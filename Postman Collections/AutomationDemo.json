{
  "info": {
    "_postman_id": "9c7b309d-821f-622f-a3cd-da5a2c2f0e49",
    "name": "AutomationDemo",
    "description": "New User Module\n\nSteps:\n1. Login using sys_admin\n2. Get the sys_admin details\n3. Get Config List\n4. Create a new Patient\n5. Create a new User for that patient\n6. Search that new user\n7. Update the new created user\n8. Login using the user created\n9. Logout\n10. Delete the new patient\n11. Delete the new User\n12. Update user.nextId and patient.nextId",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "3d003648-da88-1b54-8be7-cb0174a1f3dc",
      "name": "Login API",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "",
              "tests[\"Body contains token\"] = responseBody.has(\"token\");",
              "",
              "var jsonData = JSON.parse(responseBody);",
              "",
              "postman.setEnvironmentVariable(\"minerva_token\", jsonData.token);",
              "",
              "",
              "",
              ""
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"username\": \"{{minerva_user}}\",\n    \"password\": \"{{minerva_user_password}}\"\n}"
        },
        "url": "{{minerva_base_url}}/minerva/api/login",
        "description": "Basic Login API\nRequires following params\n\nUsername: Username for login\n\nPassword: Password the account"
      },
      "response": []
    },
    {
      "_postman_id": "d25646c9-d97b-39ea-6858-17029fb4d61e",
      "name": "Get User Details",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "",
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "",
              "var responseJson = JSON.parse(responseBody);",
              "",
              "",
              "tests[\"authorities length > 0\"] = responseJson.authorities.length > 0;",
              "",
              "tests[\"userGroups length > 0\"] = responseJson.userGroups.length > 0;",
              "",
              "tests[\"menuItems length > 0\"] = responseJson.menuItems.length > 0;",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "x-auth-token",
            "value": "{{minerva_token}}"
          },
          {
            "key": "api-info",
            "value": "{{api-info}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "\n\n\n\n"
        },
        "url": "{{minerva_base_url}}/minerva/moUser/getUserDetails"
      },
      "response": []
    },
    {
      "_postman_id": "e23f4168-6916-da76-cdbd-dbaabaf715e1",
      "name": "Config List",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "",
              ""
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "x-auth-token",
            "value": "{{minerva_token}}"
          },
          {
            "key": "api-info",
            "value": "{{api-info}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": "{{minerva_base_url}}/minerva/user/renderConfigList"
      },
      "response": []
    },
    {
      "_postman_id": "fe8cd823-c9dd-4b9a-9d47-36dd35419f53",
      "name": "Create Patient",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "f3ab3506-8f19-47b8-bdbd-0f66a7f93116",
            "type": "text/javascript",
            "exec": [
              "tests[\"Patient Created Successfully\"] = responseCode.code === 200;",
              "var responseJson = JSON.parse(responseBody);",
              "if(responseJson.patient){",
              "postman.setGlobalVariable(\"patient_id\", responseJson.patient.id);",
              "}",
              ""
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-auth-token",
            "value": "{{minerva_token}}"
          },
          {
            "key": "api-info",
            "value": "{{api-info}}"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"patientId\":\"\",\"firstName\":\"Pratyush\",\"middleName\":\"\",\"lastName\":\"\",\"dob\":\"1992-04-08T00:00:00.000Z\",\"gender\":\"M\",\"emailList\":[{\"countryCode\":null,\"primary\":\"true\",\"system\":\"email\",\"useCode\":\"work\",\"value\":\"\"}],\"phoneList\":[{\"countryCode\":\"+91\",\"primary\":\"true\",\"system\":\"phone\",\"useCode\":\"Home Phone\",\"value\":\"9810052808\"}]}"
        },
        "url": "{{minerva_base_url}}/minerva/MoPatient/savePatient"
      },
      "response": []
    },
    {
      "_postman_id": "46f10078-0a44-bfd7-2c70-9e0c3c8bfb80",
      "name": "Create User",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"User Created Successfully\"] = responseCode.code === 200;",
              "var responseJson = JSON.parse(responseBody);",
              "tests['Username unique'] = (responseJson.msg !== \"USERNAME_NOT_UNIQUE\");",
              "if(responseJson.user){",
              "postman.setGlobalVariable(\"user_id\", responseJson.user.id);",
              "postman.setGlobalVariable(\"minerva_user2\", responseJson.user.username);",
              "}",
              ""
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-auth-token",
            "value": "{{minerva_token}}"
          },
          {
            "key": "api-info",
            "value": "{{api-info}}"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"userGroups\":[5],\"username\":\"test\",\"email\":\"pbansal@mphrx.com\",\"password\":\"test1\",\"firstName\":\"Pratyush \",\"lastName\":\"\",\"phoneNo\":\"9810052808\",\"countryCode\":\"+91\",\"gender\":\"Male\",\"dob\":\"1992-04-08T00:00:00.000Z\",\"activeResource\":{\"status\":\"ACTIVE\"},\"enabled\":true,\"userType\":\"PATIENT\",\"adminCreatedPasswordNeverChanged\":true,\"signUpSource\":\"MINERVA\",\"patientId\":{{patient_id}}}"
        },
        "url": "{{minerva_base_url}}/minerva/moUser/save"
      },
      "response": []
    },
    {
      "_postman_id": "96034237-f60d-0e5a-e40d-9bd705aa503f",
      "name": "Search User",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "var responseJson = JSON.parse(responseBody);",
              "tests['user found'] = (responseJson && responseJson.totalCount > 0);",
              ""
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-auth-token",
            "value": "{{minerva_token}}",
            "description": "test"
          },
          {
            "key": "api-info",
            "value": "{{api-info}}"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"searchString\":\"pratyush\",\"_skip\":0,\"random\":\"471.7524840478724\",\"includeAnonymous\":true}"
        },
        "url": "{{minerva_base_url}}/minerva/moUser/search"
      },
      "response": []
    },
    {
      "_postman_id": "6a8c6629-4def-8ba6-407b-e596a7d8f9bd",
      "name": "Update User",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"User updated\"] = responseCode.code === 200",
              "",
              "",
              "",
              "",
              "",
              ""
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-auth-token",
            "value": "{{minerva_token}}"
          },
          {
            "key": "api-info",
            "value": "{{api-info}}"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"userGroups\":[5],\"username\":\"test\",\"email\":\"pbansal@mphrx.com\",\"settings\":{\"pushNotificationForMessage\":true,\"pushNotificationForMedicationReminder\":true,\"pushNotificationForDocDigitization\":true,\"pushNotificationForDocRejection\":true},\"enabled\":true,\"firstName\":\"ptest\",\"lastName\":\"mphrx\",\"phoneNo\":\"9810052808\",\"countryCode\":\"+91\",\"gender\":\"Male\",\"userType\":\"PATIENT\",\"dob\":\"1992-04-08T00:00:00.000Z\",\"id\":{{user_id}},\"activeResource\":{\"status\":\"ACTIVE\"},\"patientId\":{{patient_id}}}"
        },
        "url": "{{minerva_base_url}}/minerva/moUser/update"
      },
      "response": []
    },
    {
      "_postman_id": "3340574a-6b72-de5d-2a51-3f833131c451",
      "name": "Search Updated User",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "var responseJson = JSON.parse(responseBody);",
              "tests['user found'] = (responseJson && responseJson.totalCount > 0);",
              ""
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-auth-token",
            "value": "{{minerva_token}}"
          },
          {
            "key": "api-info",
            "value": "{{api-info}}"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"searchString\":\"ptest\",\"_skip\":0,\"random\":\"471.7524840478724\",\"includeAnonymous\":true}"
        },
        "url": "{{minerva_base_url}}/minerva/moUser/search"
      },
      "response": []
    },
    {
      "_postman_id": "9a2eeb0b-db39-c6d9-26c9-8149a15a5d21",
      "name": "Login Updated User",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "",
              "tests[\"Body contains token\"] = responseBody.has(\"token\");",
              "",
              "var jsonData = JSON.parse(responseBody);",
              "if(jsonData){",
              "    postman.setEnvironmentVariable(\"minerva_token\", jsonData.token);",
              "    tests[\"Logged in using new user\"] = (jsonData.id == postman.getGlobalVariable(\"user_id\"));",
              "}",
              "",
              "",
              ""
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"username\": \"{{minerva_user2}}\",\n    \"password\": \"test1\"\n}"
        },
        "url": "{{minerva_base_url}}/minerva/api/login"
      },
      "response": []
    },
    {
      "_postman_id": "0652cfa6-869d-dbca-6bb6-430f7c9ae882",
      "name": "Logout Updated User",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "e2da937a-3c42-4ee9-95f6-368aaa73f34c",
            "type": "text/javascript",
            "exec": [
              "tests[\"User logged out\"] = responseCode.code === 200;",
              ""
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-auth-token",
            "value": "{{minerva_token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{}"
        },
        "url": "{{minerva_base_url}}/minerva/api/logout"
      },
      "response": []
    },
    {
      "_postman_id": "acbb2445-6d2f-4c13-9d0b-30c75c1a24cc",
      "name": "Delete Patient",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "badad9a8-d367-4542-882e-a3b2a56334fe",
            "type": "text/javascript",
            "exec": [
              "var jsonData = JSON.parse(responseBody);",
              "tests[\"Delete Success\"] = jsonData.deleted == 1",
              ""
            ]
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "body": {},
        "url": {
          "raw": "http://127.0.0.1:3000/dev_consus/patient/*?filter={\"_id\":{{patient_id}}}",
          "protocol": "http",
          "host": [
            "127",
            "0",
            "0",
            "1"
          ],
          "port": "3000",
          "path": [
            "dev_consus",
            "patient",
            "*"
          ],
          "query": [
            {
              "key": "filter",
              "value": "{\"_id\":{{patient_id}}}",
              "equals": true
            }
          ]
        }
      },
      "response": []
    },
    {
      "_postman_id": "8e81ff46-3ca7-4732-a248-6675abb11b1c",
      "name": "Delete User",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "0e04380f-f645-4618-b60c-d78fd6eccd03",
            "type": "text/javascript",
            "exec": [
              "var jsonData = JSON.parse(responseBody);",
              "tests[\"Delete Success\"] = jsonData.deleted == 1",
              "postman.clearGlobalVariable(\"minerva_user2\");",
              "postman.clearGlobalVariable(\"minerva_user\");",
              "postman.clearGlobalVariable(\"user_id\");",
              ""
            ]
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "body": {},
        "url": {
          "raw": "http://127.0.0.1:3000/dev_consus/user/*?filter={\"_id\":{{user_id}}}",
          "protocol": "http",
          "host": [
            "127",
            "0",
            "0",
            "1"
          ],
          "port": "3000",
          "path": [
            "dev_consus",
            "user",
            "*"
          ],
          "query": [
            {
              "key": "filter",
              "value": "{\"_id\":{{user_id}}}",
              "equals": true
            }
          ]
        }
      },
      "response": []
    },
    {
      "_postman_id": "5571ddac-9326-4650-b69d-3e7520b9e235",
      "name": "Update User Next_id",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "6465e162-6b21-48f5-b6f0-4b5b7e0ec6af",
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;"
            ]
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n\t\"$inc\":{\"next_id\":-1}\n}"
        },
        "url": "http://127.0.0.1:3000/dev_consus/user.next_id/user"
      },
      "response": []
    },
    {
      "_postman_id": "62e58f37-584e-4e5b-89d6-9259b89d2668",
      "name": "Update Patient Next_id",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "6465e162-6b21-48f5-b6f0-4b5b7e0ec6af",
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;"
            ]
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n\t\"$inc\":{\"next_id\":-1}\n}"
        },
        "url": "http://127.0.0.1:3000/dev_consus/patient.next_id/patient"
      },
      "response": []
    },
    {
      "_postman_id": "30022713-26fc-4260-8d60-b227658f0705",
      "name": "Push hl7Message",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "postman.setGlobalVariable(\"time\", (new Date()).toISOString());",
              "",
              "tests[\"Successful POST request\"] = responseCode.code === 200 || responseCode.code === 201;",
              "",
              "tests[\"Status code name has string\"] = responseCode.name.has(\"OK\") || responseCode.name.has(\"Created\");",
              "",
              "var hl7MsgId = 1 + Number(postman.getGlobalVariable(\"HL7MsgId\"));",
              "postman.setGlobalVariable(\"HL7MsgId\", hl7MsgId);"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Basic YWRtaW46Y2hhbmdlaXQ="
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"_id\": NumberLong({{HL7MsgId}}),\n  \"admittingDoctorAssigningAuthority\": \"APHP\",\n  \"attendingDoctorAssigningAuthority\": \"APHP\",\n  \"consultingDoctorAssigningAuthority\": \"APHP\",\n  \"consultingPhysicianFirstName\": \"KOS\",\n  \"consultingPhysicianId\": \"1234201887\",\n  \"consultingPhysicianLastName\": \"HIPPOCRATES\",\n  \"dateCreated\": ISODate(\"2018-02-21T08:49:13.933Z\"),\n  \"documentContentPresentation\": \"AP\",\n  \"documentFileName\": \"radio\",\n  \"documentStatus\": \"F\",\n  \"encounterId\": \"AHMD-0000000015_V000671302000023-AHMD\",\n  \"eventDate\": \"20180220143345\",\n  \"eventType\": \"T02\",\n  \"jobInstanceNumber\": 0,\n  \"lastUpdated\": ISODate(\"2018-02-21T08:49:16.062Z\"),\n  \"messageBlob\": \"MSH|^~&|ORBIS|APHP|MEDIWEB|TNN|20150724114012||MDM^T02^MDM_T02|CONTROLLERID1234|P|2.5||||||8859/1\\rEVN||20180220143345\\rPID|||901109201887^^^CNV||GOPI^KISHANLAL^^^Mr^^L~GOPIKISHANLAL^pat^^^Mr^^F||19980201|F|||110^Sec77^US^H^122001^^H~^^^^122001^1^||+91-9212121271|||M||712503355||||||||||^303||N||1\\rPV1||I||A||068|1234201887^HIPPOCRATES^KOS|9099^KEVORKIAN^JACK||01||||01|||||80110977^^^CNV|||||||||||||||||||||||\\rORC|RE|radio|||||||||||^^^087^^^^^^750100273&FINESS^SIRIUS\\rOBR|radio|CCVSDTGEWQWE|||||||||||||||||||||||F\\rTXA|4|RadiologyReport|AP|||20180221090714|||10982018^Sandhal^Amit^Kumar|||radio||||radio|AU|||||AXALX^^^^^^^^^^^^^^201507241140\\rOBX|1|ED|ssss|1|^TEXT^^TEXT^||||||F\\rNTE|1||Samplenotetext\",\n  \"originationDate\": ISODate(\"2018-02-21T14:07:14Z\"),\n  \"originatorFirstName\": \"Amit\",\n  \"originatorId\": \"10982018\",\n  \"originatorLastName\": \"Sandhal\",\n  \"originatorMiddleName\": \"Kumar\",\n  \"patientAccountNumber\": \"7125033\",\n  \"patientAccountNumberUseCode\": \"usual\",\n  \"patientAlternateIds\": [\n    {\n      \"useCode\": \"temp\"\n    }\n  ],\n  \"patientCity\": \"<PID.11.3>US</PID.11.3><PID.11.3/>\",\n  \"patientDLNTypeCode\": \"DL\",\n  \"patientDLNUseCode\": \"official\",\n  \"patientDob\": \"1998-02-01T00:00:00.000+0000\",\n  \"patientFirstName\": \"KISHANLAL\",\n  \"patientHomePh\": \"+91-9212121271\",\n  \"patientId\": \"CAHW-0000000070\",\n  \"patientLastName\": \"GOPI\",\n  \"patientMpiIdAssigningAuthority\": \"MPI\",\n  \"patientMpiIdAssigningFacility\": \"MPI\",\n  \"patientMpiIdTypeCode\": \"MPI\",\n  \"patientSex\": \"F\",\n  \"patientSsnIdAssigningAuthority\": \"SSN\",\n  \"patientSsnIdAssigningFacility\": \"SSN\",\n  \"patientSsnIdTypeCode\": \"SB\",\n  \"patientSsnIdUseCode\": \"official\",\n  \"patientState\": \"<PID.11.4>H</PID.11.4><PID.11.4/>\",\n  \"patientStrAdd1\": \"110\",\n  \"patientStrAdd2\": \"<PID.11.2>Sec 77</PID.11.2><PID.11.2/>\",\n  \"patientType\": \"Inpatient\",\n  \"patientZip\": \"<PID.11.5>122001</PID.11.5><PID.11.5>122001</PID.11.5>\",\n  \"performingLocationId\": \"TNN\",\n  \"performingLocationName\": \"TNN\",\n  \"performingOrganizationId\": \"TNN\",\n  \"performingOrganizationName\": \"TNN\",\n  \"processed\": \"PENDING\",\n  \"receivedDate\": ISODate(\"2015-07-24T15:40:12Z\"),\n  \"referringDoctorAssigningAuthority\": \"APHP\",\n  \"referringPhysicianAssigningAuthority\": \"APHP\",\n  \"referringPhysicianFirstName\": \"JACK\",\n  \"referringPhysicianId\": \"ANJPG5353J\",\n  \"referringPhysicianLastName\": \"KEVORKIAN\",\n  \"reportStatus\": \"F\",\n  \"sendingFacility\": \"APHP\",\n  \"version\": NumberLong(2),\n  \"patientMRNIds\": [\n    {\n      \"assigningAuthority\": \"CAHW\",\n      \"idValue\": \"CAHW-0000000070\",\n      \"useCode\": \"usual\"\n    }\n  ],\n  \"documentType\": \"PR\",\n  \"messageType\": \"MDM\",\n  \"patientVisitNumber\": \"AHMD-0000000015_V000671302000023-AHMD\",\n  \"interpreterId\": \"PBCPC58712\",\n  \"performerRole\": \"Administrative Staff\",\n  \"parentDocumentNumber\": \"85\",\n  \"documentNumber\": null,\n  \"placerOrderNumber\": null,\n  \"markToBeDeleted\": false\n}"
        },
        "url": "http://localhost:3000/dev_consus/hl7Message"
      },
      "response": []
    }
  ]
}